#example execution of this playbook
#ansible-playbook snmp-setupv3.yml -e snmp_string=welcome1 --ask-vault-password
---

- name: Get collector ip address
  hosts: localhost
  gather_facts: yes
  tasks:
    - set_fact: 
        collector_ip: "{{ansible_facts['all_ipv4_addresses'][0]}}"

- name: Create SNMP ACL and enable SNMP
  hosts: all
  gather_facts: no
  #vars_files:  ##uncomment and update this section to use a vault file for password
  #  - ../passwords.yml
  vars:
    acl_name: anm-ms-snmp-acl
    ace_entry: []
    ace_name: []
    source_network: []
    ansible_connection: network_cli

  tasks: 
    - name: Determine OS
      ansible.builtin.include_tasks:
        file: get_os.yml

    - set_fact:
        collector_ip: "{{hostvars['localhost']['collector_ip']}}"

    #Query the switch to see if the ACL has been created. If not log it and we'll create it later.
    - name: Access List Block
      block:
        - name: Get Access Lists
          ansible.utils.cli_parse:
            command: show access-lists {{ acl_name }}
            parser:
              name: ansible.netcommon.pyats
            set_fact: access_list_output
          register: get_access_list
      rescue: 
        - name: ACL Missing from switch
          ansible.builtin.debug:
            msg: "ACL Missing from switch {{ inventory_hostname }}. First run"

   #Grab the list of ACEs in the existing ACL
    - set_fact: 
        ace_entry: "{{ ace_entry + [item.value] }}"
      with_dict: "{{ access_list_output[acl_name].aces }}"
      when: get_access_list.failed is false

    #Get the sequence number of each ACE in the existing ACL and put into a list
    - set_fact: 
        ace_name: "{{ ace_name + [item.name] }}"
      loop: "{{ ace_entry }}"
      when: get_access_list.failed is false

    #Create a list of IPs if it matches the current collector IP. This is here to see if the current collector is already in the ACL somewhere.
    - set_fact: 
        source_network: "{{ source_network + [item.matches.l3.ipv4.source_network] | regex_findall( collector_ip ) }}"
      loop: "{{ ace_entry }}"
      when: get_access_list.failed is false
    
    - ansible.builtin.debug:
        msg: "{{ get_access_list.failed }}"

##IOS Tasks##

    - name: check for old snmp string
      cisco.ios.ios_command:
        commands: "show run | in snmp-server host {{collector_ip}} version 2c {{snmp_string}}"
      register: old_snmp_string
      when: ansible_network_os == 'cisco.ios.ios'

    - name: remove old snmp string
      ios_config:
        lines:
          - "no snmp-server host {{collector_ip}} version 2c {{snmp_string}}"
        match: line
      when: ansible_network_os == 'cisco.ios.ios' and old_snmp_string['stdout'][0]|length > 0

    - name: load new entry into existing acl
      ios_config:
        lines:
          - "{{ ace_name | last  | int + 10 }} permit ip host {{ collector_ip }} any log"
        parents: ip access-list extended {{ acl_name }}
        match: line
      when: (source_network | length < 1) and (ansible_network_os == 'cisco.ios.ios') and (get_access_list.failed is false) 

    - name: load new entry into new acl
      ios_config:
        lines:
          - "10 permit ip host {{ collector_ip }} any log"
        parents: ip access-list extended {{ acl_name }}
        match: line
      when: (source_network | length < 1) and (ansible_network_os == 'cisco.ios.ios') and (get_access_list.failed is true) 

    - name: enable snmp on device
      ios_config:
        lines:
          - "snmp-server community {{ snmp_string}} RO {{ acl_name }}"
        match: line
      when: ansible_network_os == 'cisco.ios.ios'

    - name: save running to startup when modified
      ios_config:
        save_when: changed
      when: ansible_network_os == 'cisco.ios.ios'

##NXOS Tasks##

    - name: Load new entries into existing nxos acl
      cisco.nxos.nxos_config:
        lines: "{{ ace_name | last  | int + 10 }} permit ip {{ collector_ip }}/32 any log"
        parents: ip access-list {{ acl_name }}
        match: line
      when: (source_network | length < 1) and (ansible_network_os == 'cisco.nxos.nxos') and (get_access_list.failed is false)      

    - name: Load new entries into new nxos acl
      cisco.nxos.nxos_config:
        lines: "10 permit ip {{ collector_ip }}/32 any log"
        parents: ip access-list {{ acl_name }}
        match: line
      when: (source_network | length < 1) and (ansible_network_os == 'cisco.nxos.nxos') and (get_access_list.failed is true)      

    - name: enable snmp on nexus device
      cisco.nxos.nxos_config:
        lines:
          - "snmp-server community {{ snmp_string }} use-ipv4acl {{ acl_name }}"
          - "snmp-server community {{ snmp_string }} group network-operator"
        match: line
      when: ansible_network_os == 'cisco.nxos.nxos'
 
    - name: save running to startup when modified
      cisco.nxos.nxos_config:
        save_when: changed
      when: ansible_network_os == 'cisco.nxos.nxos'
 